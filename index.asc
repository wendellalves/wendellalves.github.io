= Exercícios - Processamento Digital de imagens

Wendell Alves <wendell.a.silva2@gmail.com>

== Lista de Atividades

* Atividade 3.1
* Atividade 3.2
* Atividade 4.1
* Atividade 4.2
* Atividade 6.1

=== Atividade 3.1

Programa que solicita do usuário as coordenadas de dois pontos P1 e P2 dentro dos limites da imagem. Com isso, o retângulo limitado pelos pontos P1 e P2 mostrará o negativo da imagem na região correspondente.

O código fonte link:NegativoRegiao.cpp[] está mostrado abaixo:

----
include::NegativoRegiao.cpp[]
----

Abaixo encontram-se as imagens de entrada e saída respectivamente.

image::biel.png[Entrada do Programa, title="Entrada dos programas 3.1 e 3.2"]
image::saidaNegativoRegiao.png[Entrada do Programa, title="Saída do programa"]

=== Atividade 3.2

Programa divide a image em quatro partes e misturar como se fosse um quebra-cabeças.

O código fonte link:trocaregioes.cpp[]  está mostrado abaixo:

----
include::trocaregioes.cpp[]
----

Abaixo encontra-se a imagem de saída.

image::trocaregioes.png[Entrada do Programa, title="Saída do programa"]

=== Atividade 4.1

Programa para realizar a contagem dos objetos na cena se caso existam mais de 255 objetos na cena.

O código fonte link:contarmaisde255.cpp[]  está mostrado abaixo:

----
include::contarmaisde255.cpp[]
----

Abaixo encontram-se as imagens de entrada e saída respectivamente.

image::bolhas.png[Entrada do Programa, title="Entrada dos programas 4.1 e 4.2"]
image::contarmaisde255.png[Entrada do Programa, title="Saída do programa"]

=== Atividade 4.2

Algoritmo para contar as bolhas que possuem buracos e as que não possuem buracos, eliminando as que tocam as bordas, pois a princípio não podemos dizer se estas possuem ou não buracos.

O código fonte link:contarburacos.cpp[]  está mostrado abaixo:

----
include::contarburacos.cpp[]
----

Abaixo encontra-se a imagem de saída.

image::contarburacos.png[Entrada do Programa, title="Saída do programa"]

=== Atividade 6.1

Algoritmo que possui um menu com várias opções de filtro:
 a - Calcular módulo;
 m - Media;
 g - Gauss;
 v - Verticals;
 h - Horizontal;
 l - Laplaciano;
 k - Glaussiano depois laplaciano;
 esc - sair.

Algoritmo cuja a opção 'k' passa um filtro Gaussiano e depois um filtro Laplaciano.

O código fonte link:laplalgauss.cpp[]  está mostrado abaixo:

----
include::laplalgauss.cpp[]
----


== Bibliografia
[bibliography]
- http://docs.opencv.org/2.4/modules/refman.html. 'Referência da biblioteca OpenCV.'
- http://www.cplusplus.com. 'Principal portal de desenvolvimento e referência para programação em C++'.
